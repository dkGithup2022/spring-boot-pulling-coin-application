

spring:
  profile:
    active: test

server:
  port: 8082

logging:
  file:
    name: logs/log_v1_1.log


---
#test 환경
spring:
  config:
    activate:
      on-profile: test

  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;
    username: sa
    password:

  h2:
    console:
      path: /h2-console
      enabled: true

  jpa:
    show-sql: false
    generate-ddl: true

property:
  upbitCron:
    tick:
      doubleCheck:
        cronCommand: 00 */5 * * * *
        period: 5
      restartSessions:
        cronCommand : 00 */8 * * * *

    orderbook:
      restartSessions:
        cronCommand: 00 */23 * * * *

logging:
  level:
    org:
      springframework:
        cache: TRACE


---
#prod 환경
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://postgres-01.cohovelkyjmq.ap-northeast-2.rds.amazonaws.com:5432/pulling_demo
    username: postgres
    password: postgres1

  jpa:
    show-sql: false
    generate-ddl: true
    hibernate:
      ddl-auto: update

property:
  upbitCron:
    tick:
      doubleCheck:
        cronCommand: 00 */15 * * * *
        period: 15
      restartSessions:
        cronCommand : 00 00 00 * * *

    orderbook:
      restartSessions:
        cronCommand: 00 10 00 */5 * *


---
#dev 환경
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://192.168.1.105:5432/dev_pulling_demo
    username: postgres
    password: postgres

    h2:
    console:
      path: /h2-console
      enabled: true

  jpa:
    show-sql: false
    generate-ddl: true

property:
  upbitCron:
    tick:
      doubleCheck:
        cronCommand: 00 */5 * * * *
        period: 10
      restartSessions:
        cronCommand : 00 */8 * * * *

    orderbook:
      restartSessions:
        cronCommand: 00 */23 * * * *

logging:
  level:
    org:
      springframework:
        cache: TRACE

